<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>安卓学习之路（Activity篇）</title>
      <link href="/2021/09/07/an-zhuo-xue-xi-zhi-lu-activity-pian/"/>
      <url>/2021/09/07/an-zhuo-xue-xi-zhi-lu-activity-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="1-定义"><a href="#1-定义" class="headerlink" title="1. 定义"></a>1. 定义</h1><p>Activity是一个与用户交互的接口</p><h1 id="2-生命周期"><a href="#2-生命周期" class="headerlink" title="2. 生命周期"></a>2. 生命周期</h1><h2 id="2-1-Activity的四种状态"><a href="#2-1-Activity的四种状态" class="headerlink" title="2.1. Activity的四种状态"></a>2.1. Activity的四种状态</h2><p>Active、Paused、Stopped、Killed</p><h2 id="2-2-Activity生命周期分析"><a href="#2-2-Activity生命周期分析" class="headerlink" title="2.2. Activity生命周期分析"></a>2.2. Activity生命周期分析</h2><h3 id="2-2-1-正常情况下生命周期："><a href="#2-2-1-正常情况下生命周期：" class="headerlink" title="2.2.1. 正常情况下生命周期："></a>2.2.1. 正常情况下生命周期：</h3><p>Activity启动–&gt;onCreate()–&gt;onStart()–&gt;onResume()</p><p>点击home键回到桌面–&gt;onPause()–&gt;onStop()</p><p>再次回到原Activity–&gt;onRestart()–&gt;onStart()–&gt;onResume()</p><p>退出当前Activity时–&gt;onPause()–&gt;onStop()–&gt;onDestroy()</p><h3 id="2-2-2-详细生命周期"><a href="#2-2-2-详细生命周期" class="headerlink" title="2.2.2. 详细生命周期"></a>2.2.2. 详细生命周期</h3><p>如图：</p><p><img src="C:\Users\Vigour\AppData\Roaming\Typora\typora-user-images\image-20210907174154721.png" alt="image-20210907174154721"></p><ol><li>启动了一个Activity，通常用intent来启动</li></ol>]]></content>
      
      
      <categories>
          
          <category> 安卓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Activity -生命周期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库系统（JDBC）</title>
      <link href="/2021/09/02/shu-ju-ku-xi-tong-jdbc/"/>
      <url>/2021/09/02/shu-ju-ku-xi-tong-jdbc/</url>
      
        <content type="html"><![CDATA[<h2 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h2><p>建表语句</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>s<span class="token punctuation">`</span> <span class="token punctuation">(</span>    <span class="token punctuation">`</span>sno<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>sname<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>city<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>sno<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>p<span class="token punctuation">`</span> <span class="token punctuation">(</span>    <span class="token punctuation">`</span>pno<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>pname<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>color<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>weight<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>total_count<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>pno<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>j<span class="token punctuation">`</span> <span class="token punctuation">(</span>    <span class="token punctuation">`</span>jno<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>jname<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>city<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>jno<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>spj<span class="token punctuation">`</span> <span class="token punctuation">(</span>    <span class="token punctuation">`</span>sno<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>pno<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>jno<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>qty<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>sno<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>pno<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>jno<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数据库连接 DBUtil.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DBUtil</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> jdbcUrl<span class="token operator">=</span><span class="token string">"jdbc:mysql://localhost:3306/booklib"</span><span class="token punctuation">;</span>peivate <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> dbUser<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> dbPwd<span class="token operator">=</span><span class="token string">"123456"</span><span class="token keyword">static</span> <span class="token punctuation">{</span><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>SQLException</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>jdbcUrl<span class="token punctuation">,</span> dbUser<span class="token punctuation">,</span> dbPwd<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据零件编号提取零件完整信息</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">BeanP</span> <span class="token function">m001LoadP</span><span class="token punctuation">(</span><span class="token class-name">String</span> pno<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        conn <span class="token operator">=</span> <span class="token class-name">DBUtil</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//建立连接对象</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select * from p where pno = ?"</span><span class="token punctuation">;</span> <span class="token comment">//sql语句</span>        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>PreparedStatement</span> pst <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>        pst<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> pno<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>ResultSet</span> rs <span class="token operator">=</span> pst<span class="token punctuation">.</span><span class="token function">excuteQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">BeanP</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            p<span class="token punctuation">.</span><span class="token function">setPno</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            p<span class="token punctuation">.</span><span class="token function">setPname</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            p<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            p<span class="token punctuation">.</span><span class="token function">setWeight</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            p<span class="token punctuation">.</span><span class="token function">setTotal_count</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> p<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库系统（基础篇）</title>
      <link href="/2021/08/26/shu-ju-ku-xi-tong-ji-chu-pian/"/>
      <url>/2021/08/26/shu-ju-ku-xi-tong-ji-chu-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h1><h2 id="1-1-四个基本概念"><a href="#1-1-四个基本概念" class="headerlink" title="1.1. 四个基本概念"></a>1.1. 四个基本概念</h2><p>数据（data）、数据库（DB）、数据库管理系统（DBMS）、数据库系统（DBS）。</p><p>数据库管理系统（DBMS）提供：</p><ul><li><p><strong>数据定义语言</strong>（DDL），用户通过它可以方便地对数据库中的数据对象的组成与结构进行定义。</p></li><li><p><strong>数据操纵语言</strong>（DML），用户通过它操纵数据，实现对数据库的基本操作，如增删改查等。</p></li></ul><p>数据库系统（DBS）是由数据库、数据库管理系统、应用程序和数据库管理员（DBA）组成的存储、管理、处理和维护数据的系统。</p><p>数据管理技术的三个阶段：人工管理阶段、文件系统阶段、数据库系统阶段。</p><h2 id="1-2-数据库系统的特点"><a href="#1-2-数据库系统的特点" class="headerlink" title="1.2. 数据库系统的特点"></a>1.2. 数据库系统的特点</h2><p>数据结构化</p><p>数据共享性高、冗余度低且易扩充</p><ul><li>数据共享可以大大减少数据冗余，节约存储空间。数据共享还可以避免数据之间的不相容性与不一致性。</li></ul><p>数据独立性高</p><ul><li>物理独立性</li><li>逻辑独立性</li></ul><p>数据由数据库管理系统统一管理和控制</p><ul><li>数据的安全性保护</li><li>数据的完整性检查</li><li>并发控制</li><li>数据库恢复</li></ul><h2 id="1-3-数据模型"><a href="#1-3-数据模型" class="headerlink" title="1.3. 数据模型"></a>1.3. 数据模型</h2><p>概念模型（E-R图）</p><ul><li>实体（entity）</li><li>属性</li><li>码</li><li>实体型</li><li>实体集</li><li>联系（relationship）：一对一、一对多、多对多</li></ul><p>逻辑模型</p><ul><li>层次模型</li><li>网状模型</li><li>关系模型：由关系、元组、属性、码、域、分量和关系模式组成</li><li>面向对象数据模型</li><li>对象关系数据模型</li><li>半结构化数据模型</li></ul><p>物理模型：对数据最底层的抽象</p><p>数据模型通常由数据结构、数据操作和数据的完整性约束三部分组成。</p><p>层次和网状模型统称为格式化模型，逐渐被关系模型的数据库系统取代。</p><h2 id="1-4-三级映射模式"><a href="#1-4-三级映射模式" class="headerlink" title="1.4. 三级映射模式"></a>1.4. 三级映射模式</h2><p>模式（逻辑模式）、外模式（子模式/用户模式）、内模式（存储模式）</p><p>三级模式之间的两层映像：外模式/模式映像（逻辑独立性）和模式/内模式映像（物理独立性）。两层映像保证了数据库系统中数据具有较高的逻辑独立性和物理独立性。</p><h1 id="第二章-关系数据库"><a href="#第二章-关系数据库" class="headerlink" title="第二章 关系数据库"></a>第二章 关系数据库</h1><h2 id="2-1-关系"><a href="#2-1-关系" class="headerlink" title="2.1. 关系"></a>2.1. 关系</h2><p>域相同数据类型的值的集合</p><p>笛卡尔积：相当于各集合分量的所有组合情况</p><p>关系：基本表、查询表和视图表</p><h2 id="2-2-关系操作"><a href="#2-2-关系操作" class="headerlink" title="2.2. 关系操作"></a>2.2. 关系操作</h2><p>查询：选择、投影、并、差、笛卡尔积、连接、除、交</p><p>插入</p><p>删除</p><p>修改</p><h2 id="2-3-关系完整性"><a href="#2-3-关系完整性" class="headerlink" title="2.3. 关系完整性"></a>2.3. 关系完整性</h2><p>实体完整性：关系的主键唯一且非空。</p><p>参照完整性：</p><ul><li>参照关系中含外码，被参照关系中外码是主码。 </li><li>属性F是基本关系的外码且与基本关系S的主码Ks相对应。</li></ul><p>用户定义的完整性 </p><h2 id="2-4-关系代数"><a href="#2-4-关系代数" class="headerlink" title="2.4. 关系代数"></a>2.4. 关系代数</h2><p>选择：又称为限制，一般用于查询选择满足一定条件的元组。</p><p>投影：从原关系中选出某些列，取消重复的元组，组成行的关系。</p><p>连接：从两个关系的笛卡尔积中选取属性间满足一定条件的元组。</p><ul><li>等值连接</li><li>非等值连接</li><li>自然连接：两个关系进行比较的分量必须是同名的属性组，并且在结果中把重复的属性列去掉。</li><li>外连接：吧舍弃的悬浮元组也保留在结果关系中。<ul><li>左外连接</li><li>右外连接</li></ul></li><li>除运算：相当于在关系R中去掉和关系S共同的元素</li></ul><h1 id="第三章-SQL"><a href="#第三章-SQL" class="headerlink" title="第三章 SQL"></a>第三章 SQL</h1><h2 id="3-1-数据定义"><a href="#3-1-数据定义" class="headerlink" title="3.1. 数据定义"></a>3.1. 数据定义</h2>]]></content>
      
      
      <categories>
          
          <category> 数据库系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库系统 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
